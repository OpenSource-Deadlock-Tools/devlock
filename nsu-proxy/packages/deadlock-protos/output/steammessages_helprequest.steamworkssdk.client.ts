// @generated by protobuf-ts 2.9.4 with parameter use_proto_field_name
// @generated from protobuf file "steammessages_helprequest.steamworkssdk.proto" (syntax proto2)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { HelpRequestLogs } from "./steammessages_helprequest.steamworkssdk.js";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CHelpRequestLogs_UploadUserApplicationLog_Response } from "./steammessages_helprequest.steamworkssdk.js";
import type { CHelpRequestLogs_UploadUserApplicationLog_Request } from "./steammessages_helprequest.steamworkssdk.js";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service HelpRequestLogs
 */
export interface IHelpRequestLogsClient {
	/**
	 * @generated from protobuf rpc: UploadUserApplicationLog(CHelpRequestLogs_UploadUserApplicationLog_Request) returns (CHelpRequestLogs_UploadUserApplicationLog_Response);
	 */
	uploadUserApplicationLog(
		input: CHelpRequestLogs_UploadUserApplicationLog_Request,
		options?: RpcOptions,
	): UnaryCall<CHelpRequestLogs_UploadUserApplicationLog_Request, CHelpRequestLogs_UploadUserApplicationLog_Response>;
}
/**
 * @generated from protobuf service HelpRequestLogs
 */
export class HelpRequestLogsClient implements IHelpRequestLogsClient, ServiceInfo {
	typeName = HelpRequestLogs.typeName;
	methods = HelpRequestLogs.methods;
	options = HelpRequestLogs.options;
	constructor(private readonly _transport: RpcTransport) {}
	/**
	 * @generated from protobuf rpc: UploadUserApplicationLog(CHelpRequestLogs_UploadUserApplicationLog_Request) returns (CHelpRequestLogs_UploadUserApplicationLog_Response);
	 */
	uploadUserApplicationLog(
		input: CHelpRequestLogs_UploadUserApplicationLog_Request,
		options?: RpcOptions,
	): UnaryCall<CHelpRequestLogs_UploadUserApplicationLog_Request, CHelpRequestLogs_UploadUserApplicationLog_Response> {
		const method = this.methods[0],
			opt = this._transport.mergeOptions(options);
		return stackIntercept<
			CHelpRequestLogs_UploadUserApplicationLog_Request,
			CHelpRequestLogs_UploadUserApplicationLog_Response
		>("unary", this._transport, method, opt, input);
	}
}
