// @generated by protobuf-ts 2.9.4 with parameter use_proto_field_name
// @generated from protobuf file "engine_gcmessages.proto" (syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message CEngineGotvSyncPacket
 */
export interface CEngineGotvSyncPacket {
  /**
   * @generated from protobuf field: optional uint64 match_id = 1;
   */
  match_id?: bigint;
  /**
   * @generated from protobuf field: optional uint32 instance_id = 2;
   */
  instance_id?: number;
  /**
   * @generated from protobuf field: optional uint32 signupfragment = 3;
   */
  signupfragment?: number;
  /**
   * @generated from protobuf field: optional uint32 currentfragment = 4;
   */
  currentfragment?: number;
  /**
   * @generated from protobuf field: optional float tickrate = 5;
   */
  tickrate?: number;
  /**
   * @generated from protobuf field: optional uint32 tick = 6;
   */
  tick?: number;
  /**
   * @generated from protobuf field: optional float rtdelay = 8;
   */
  rtdelay?: number;
  /**
   * @generated from protobuf field: optional float rcvage = 9;
   */
  rcvage?: number;
  /**
   * @generated from protobuf field: optional float keyframe_interval = 10;
   */
  keyframe_interval?: number;
  /**
   * @generated from protobuf field: optional uint32 cdndelay = 11;
   */
  cdndelay?: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class CEngineGotvSyncPacket$Type extends MessageType<CEngineGotvSyncPacket> {
  constructor() {
    super("CEngineGotvSyncPacket", [
      {
        no: 1,
        name: "match_id",
        kind: "scalar",
        localName: "match_id",
        opt: true,
        T: 4 /*ScalarType.UINT64*/,
        L: 0 /*LongType.BIGINT*/,
      },
      {
        no: 2,
        name: "instance_id",
        kind: "scalar",
        localName: "instance_id",
        opt: true,
        T: 13 /*ScalarType.UINT32*/,
      },
      {
        no: 3,
        name: "signupfragment",
        kind: "scalar",
        opt: true,
        T: 13 /*ScalarType.UINT32*/,
      },
      {
        no: 4,
        name: "currentfragment",
        kind: "scalar",
        opt: true,
        T: 13 /*ScalarType.UINT32*/,
      },
      {
        no: 5,
        name: "tickrate",
        kind: "scalar",
        opt: true,
        T: 2 /*ScalarType.FLOAT*/,
      },
      {
        no: 6,
        name: "tick",
        kind: "scalar",
        opt: true,
        T: 13 /*ScalarType.UINT32*/,
      },
      {
        no: 8,
        name: "rtdelay",
        kind: "scalar",
        opt: true,
        T: 2 /*ScalarType.FLOAT*/,
      },
      {
        no: 9,
        name: "rcvage",
        kind: "scalar",
        opt: true,
        T: 2 /*ScalarType.FLOAT*/,
      },
      {
        no: 10,
        name: "keyframe_interval",
        kind: "scalar",
        localName: "keyframe_interval",
        opt: true,
        T: 2 /*ScalarType.FLOAT*/,
      },
      {
        no: 11,
        name: "cdndelay",
        kind: "scalar",
        opt: true,
        T: 13 /*ScalarType.UINT32*/,
      },
    ]);
  }
  create(value?: PartialMessage<CEngineGotvSyncPacket>): CEngineGotvSyncPacket {
    const message = globalThis.Object.create(this.messagePrototype!);
    if (value !== undefined) reflectionMergePartial<CEngineGotvSyncPacket>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CEngineGotvSyncPacket,
  ): CEngineGotvSyncPacket {
    let message = target ?? this.create(),
      end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* optional uint64 match_id */ 1:
          message.match_id = reader.uint64().toBigInt();
          break;
        case /* optional uint32 instance_id */ 2:
          message.instance_id = reader.uint32();
          break;
        case /* optional uint32 signupfragment */ 3:
          message.signupfragment = reader.uint32();
          break;
        case /* optional uint32 currentfragment */ 4:
          message.currentfragment = reader.uint32();
          break;
        case /* optional float tickrate */ 5:
          message.tickrate = reader.float();
          break;
        case /* optional uint32 tick */ 6:
          message.tick = reader.uint32();
          break;
        case /* optional float rtdelay */ 8:
          message.rtdelay = reader.float();
          break;
        case /* optional float rcvage */ 9:
          message.rcvage = reader.float();
          break;
        case /* optional float keyframe_interval */ 10:
          message.keyframe_interval = reader.float();
          break;
        case /* optional uint32 cdndelay */ 11:
          message.cdndelay = reader.uint32();
          break;
        default:
          let u = options.readUnknownField;
          if (u === "throw")
            throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
          let d = reader.skip(wireType);
          if (u !== false) (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CEngineGotvSyncPacket,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* optional uint64 match_id = 1; */
    if (message.match_id !== undefined) writer.tag(1, WireType.Varint).uint64(message.match_id);
    /* optional uint32 instance_id = 2; */
    if (message.instance_id !== undefined) writer.tag(2, WireType.Varint).uint32(message.instance_id);
    /* optional uint32 signupfragment = 3; */
    if (message.signupfragment !== undefined) writer.tag(3, WireType.Varint).uint32(message.signupfragment);
    /* optional uint32 currentfragment = 4; */
    if (message.currentfragment !== undefined) writer.tag(4, WireType.Varint).uint32(message.currentfragment);
    /* optional float tickrate = 5; */
    if (message.tickrate !== undefined) writer.tag(5, WireType.Bit32).float(message.tickrate);
    /* optional uint32 tick = 6; */
    if (message.tick !== undefined) writer.tag(6, WireType.Varint).uint32(message.tick);
    /* optional float rtdelay = 8; */
    if (message.rtdelay !== undefined) writer.tag(8, WireType.Bit32).float(message.rtdelay);
    /* optional float rcvage = 9; */
    if (message.rcvage !== undefined) writer.tag(9, WireType.Bit32).float(message.rcvage);
    /* optional float keyframe_interval = 10; */
    if (message.keyframe_interval !== undefined) writer.tag(10, WireType.Bit32).float(message.keyframe_interval);
    /* optional uint32 cdndelay = 11; */
    if (message.cdndelay !== undefined) writer.tag(11, WireType.Varint).uint32(message.cdndelay);
    let u = options.writeUnknownFields;
    if (u !== false) (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message CEngineGotvSyncPacket
 */
export const CEngineGotvSyncPacket = new CEngineGotvSyncPacket$Type();
